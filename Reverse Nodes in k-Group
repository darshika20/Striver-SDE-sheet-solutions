/*
@author: Darshika
@Question Link: https://leetcode.com/problems/reverse-nodes-in-k-group/
@Time Complexity: O(n)
@Space Complexity: O(1)
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        int count = 0;
        ListNode dummy = new ListNode();
        dummy.next = head;
        ListNode prev = head;
        ListNode cur = head;
        ListNode nex = head;
        while(prev!=null){
            prev=prev.next;
            count++;
        }
        prev = dummy;
        while(count>=k){
            cur = prev.next;
            nex = cur.next;
            for(int i = 1;i<k;i++){
                cur.next = nex.next;
                nex.next = prev.next;
                prev.next = nex;
                nex = cur.next;
            }
            prev = cur;
            count -= k;
        }
        return dummy.next;
    }
}
