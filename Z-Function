/**
* author: Darshika
* Question Link: https://leetcode.com/problems/implement-strstr/
* Time Complexity: O(m+n)
* Space Complexity: O(m+n)
*/

class Solution {
    public int strStr(String haystack, String needle) {
        
        if(haystack.length() < needle.length()){
            return -1;
        }
        
        if(needle.length() == 0){
            return 0;
        }
        
        String word = needle+'#'+haystack;
        int[] z = zfunc(word);
        for(int i = 0;i<z.length;i++){
            //System.out.println(z[i]);
            if(z[i] == needle.length()){
                return i-needle.length()-1;
            }
        }
        return -1;
    }
    
    private int[] zfunc(String word){
        
        int[] z = new int[word.length()];
        int l = 0;
        int r = 0;
        for(int i = 1;i< z.length;i++){
            if(r >= i){
                z[i] = Math.min(r-i+1,z[i-l]);
            }
            while(i+z[i] < word.length() && word.charAt(z[i]) == word.charAt(i+z[i])){
                z[i]++;
            }
            if(i+z[i]-1 > r){
                l = i;
                r = i+z[i]-1;
            }
        }
        return z;
    }
}
