/**
* author: Darshika
* Question link: https://leetcode.com/problems/search-in-rotated-sorted-array/
* Time Complexity : O(logn)
* Space Complexity : O(1)
*/

class Solution {
    public int search(int[] nums, int target) {
        int lo = 0;
        int hi = nums.length-1;
        while(lo<=hi){
            int mid = (lo+hi)/2;
            if(nums[mid] == target){
                return mid;
            }else if(nums[lo] <= nums[mid]){
                if(target >= nums[lo] && target < nums[mid]) {
                    hi = mid-1;
                }else{
                    lo = mid+1;
                }
            }else if(nums[hi] >= nums[mid]){
                if(target > nums[mid] && target <= nums[hi]){
                    lo = mid+1;
                }else{
                    hi = mid-1;
                }
            }
        }
        return -1;
    }
}
