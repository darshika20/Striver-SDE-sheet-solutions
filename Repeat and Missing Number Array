/*
@author: Darshika
@Question Link: https://www.interviewbit.com/problems/repeat-and-missing-number-array/
*/

public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> repeatedNumber(final List<Integer> A) {

        //finding xor of missing and repeating number
        int xor = 0;

        //System.out.println("*******"+(4^1)+"*********");

        for(int i =1;i<=A.size();i++){
            //System.out.println(A.get(i-1));
            xor ^=A.get(i-1);
            xor ^=i;
            //System.out.println("*******"+xor+"*********");
        }


        //finding set bit of xor

        int test = 1;

        int setBit = 0;

        for(int i = 0;i<32;i++){
            //System.out.println("**"+(1<<i)+"**"+xor+"**");
            if(((1<<i) & xor)!=0){
                setBit = i;
                break;
            }
        }

        //System.out.println("**********"+setBit+"************");

        //separating numbers into 2 buckets

        int setxor = 0;
        int unsetxor = 0;

        for(int val : A){
            if(((1<<setBit) & val)!=0){
                setxor ^= val;
            }else{
                unsetxor ^= val;
            }
        }

        for(int i =1;i<=A.size();i++){
            if(((1<<setBit) & i)!=0){
                setxor ^= i;
            }else{
                unsetxor ^= i;
            }
        }

        //finding missing number and repeating number

        int missing = 0;
        int repeating = 0;

        for(int val : A){
            if(val == setxor){
                repeating = setxor;
                missing = unsetxor;
                break;
            }
            if(val == unsetxor){
                repeating = unsetxor;
                missing = setxor;
                break;
            }
        }

        ArrayList<Integer> res = new ArrayList<>();
        res.add(repeating);
        res.add(missing);

        return res;


    }
}
