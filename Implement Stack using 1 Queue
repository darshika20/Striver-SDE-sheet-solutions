/**
* author: Darshika
* Question Link : https://leetcode.com/problems/implement-stack-using-queues/
* Time Complexity : push - O(n) n- size of queue , pop - O(1) 
* Space Complexity : O(n)
*/

class MyStack {
    
    Queue<Integer> q1 ;

    public MyStack() {
        q1 = new ArrayDeque<>();
    }
    
    public void push(int x) {
        int prevSize = q1.size();
        q1.add(x);
        for(int i =0;i<prevSize;i++) q1.add(q1.remove());
    }
    
    public int pop() {
        return q1.remove();
    }
    
    public int top() {
        return q1.peek();
    }
    
    public boolean empty() {
        return q1.size() == 0;
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
