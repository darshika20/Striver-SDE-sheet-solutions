/**
* author: Darshika
* Question Link: https://leetcode.com/problems/permutation-sequence/
* Time Complexity: O(n^2)
* Space Complexity: O(n)
*/

class Solution {
    public String getPermutation(int n, int k) {
        int fact = 1;
        k--;
        List<Integer> numbers = new ArrayList<>();
        for(int i =1;i<n;i++){
            fact *= i;
            numbers.add(i);
        }
        numbers.add(n);
        String ans = "";
        while(true){ //O(n)
            
            ans += numbers.get(k/fact);
            numbers.remove(k/fact); //O(n)            
            if(numbers.size() == 0){
                return ans;
            }
            k = k%fact;
            fact /= numbers.size();
        }
    }
}
