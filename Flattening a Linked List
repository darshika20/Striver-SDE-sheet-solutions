/*
@author: Darshika
@Question Link: https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1#
@Time Complexity: O(N+M) // N+M -> total number of nodes
@Space Complexity: O(1)
*/

class GfG
{
    Node flatten(Node root)
    {
	// Your code here
	    if(root == null || root.next == null){
	        return root;
	    }
	    root.next = flatten(root.next);
	    root = mergeLists(root,root.next);
	    return root;
    }
    
    private Node mergeLists(Node a,Node b){
        Node dummy = new Node(0);
        Node temp = dummy;
        while(a!=null && b!=null){
            if(a.data<b.data){
                temp.bottom = a;
                temp = temp.bottom;
                a = a.bottom;
            }else{
                temp.bottom = b;
                temp = temp.bottom;
                b = b.bottom;
            }
        }
        if(a!=null){
            temp.bottom = a;
        }else{
            temp.bottom = b;
        }
        return dummy.bottom;
    }
}
