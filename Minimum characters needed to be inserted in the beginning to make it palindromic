/**
* author: Darshika
* Question Link: https://www.interviewbit.com/problems/minimum-characters-required-to-make-a-string-palindromic/#
* Time Complexity: O(n)
* Space Complexity: O(n)
*/

public class Solution {
    public int solve(String A) {
        int[] lps = createLps(A+'#'+new StringBuffer(A).reverse().toString());
        return A.length() - lps[lps.length-1];
    }

    private int[] createLps(String word) {
        int[] lps = new int[word.length()];
        int i = 1;
        int len = 0;
        while(i < lps.length){
            if(word.charAt(len) == word.charAt(i)){
                len++;
                lps[i] = len;
                i++;
            } else {
                if(len > 0) {
                    len = lps[len-1];
                } else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
        return lps;
    }
}
