/*
@author : Darshika
@Question Link : https://leetcode.com/problems/search-a-2d-matrix/
@Time Complexity : O(log(mn))
@Space Complexity : O(1)
*/

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int n = matrix.length;
        int m = matrix[0].length;
        int lo = 0;
        int hi = n*m-1;
        
        while(lo<=hi){
            int mid = (lo+hi)/2;
            
            if(matrix[mid/m][mid%m] == target){
                return true;
            }else if(matrix[mid/m][mid%m] < target){
                lo = mid+1;
            }else{
                hi = mid-1;
            }
        }
        return false;
        
    }
}
